" Custom mappings for vim
nmap <silent> <leader>t :TestNearest<CR>
nmap <silent> <leader>T :TestFile<CR>
nmap <silent> <leader>a :TestSuite<CR>
nmap <silent> <leader>l :TestLast<CR>
nmap <silent> <leader>g :TestVisit<CR>
noremap <leader>x :NERDTreeToggle<CR>
noremap <leader>b :Buffers<CR>
noremap <leader>f :Files<CR>
noremap <leader>n :set rnu<CR>
noremap <leader>N :set nornu<CR>
noremap <leader>tt :tabnew<CR>
noremap <leader>tc :tabclose<CR>
noremap <leader>tn :tabnext<CR>
noremap <leader>tp :tabprev<CR>
noremap <leader>tf :tabfirst<CR>
noremap <leader>tl :tablast<CR>
noremap <leader>to :tabonly<CR>
noremap <leader>te :tabedit
noremap <leader>tm :tabmove
noremap <leader>nt :NERDTreeToggle<CR>
noremap <leader>pi :PlugInstall<CR>
noremap <leader>pu :PlugUpdate<CR>
nnoremap <space> za
imap <c-x><c-k> <plug>(fzf-complete-word)
imap <c-x><c-f> <plug>(fzf-complete-path)
imap <c-x><c-l> <plug>(fzf-complete-line)

inoremap <silent><expr> <CR> coc#pum#visible() ? coc#pum#confirm()
                              \: "\<C-g>u\<CR>\<c-r>=coc#on_enter()\<CR>"

" Use K to show documentation in preview window
nnoremap <silent> K :call ShowDocumentation()<CR>

function! ShowDocumentation()
  if CocAction('hasProvider', 'hover')
    call CocActionAsync('doHover')
  else
    call feedkeys('K', 'in')
  endif
endfunction

" Highlight the symbol and its references when holding the cursor
autocmd CursorHold * silent call CocActionAsync('highlight')"
